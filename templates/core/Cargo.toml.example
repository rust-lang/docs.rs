{# The example Cargo.toml used in about.html #}[package]
name = "test"

[package.metadata.docs.rs]

# Features to pass to Cargo (default: [])
features = ["feature1", "feature2"]

# Whether to pass `--all-features` to Cargo (default: false)
all-features = true

# Whether to pass `--no-default-features` to Cargo (default: false)
no-default-features = true

# Target to test build on, used as the default landing page (default: "x86_64-unknown-linux-gnu")
#
# Any target supported by rustup can be used.
default-target = "x86_64-unknown-linux-gnu"

# Targets to build (default: see below)
#
# Any target supported by rustup can be used.
#
# Default targets:
# - x86_64-unknown-linux-gnu
# - x86_64-apple-darwin
# - x86_64-pc-windows-msvc
# - i686-unknown-linux-gnu
# - i686-pc-windows-msvc
#
# Set this to `[]` to only build the default target.
#
# If `default-target` is unset, the first element of `targets` is treated as the default target.
# Otherwise, these `targets` are built in addition to the default target.
# If both `default-target` and `targets` are unset,
#   all tier-one targets will be built and `x86_64-unknown-linux-gnu` will be used as the default target.
targets = ["x86_64-apple-darwin", "x86_64-pc-windows-msvc"]

# Additional `RUSTFLAGS` to set (default: [])
rustc-args = ["--example-rustc-arg"]

# Additional `RUSTDOCFLAGS` to set (default: [])
rustdoc-args = ["--example-rustdoc-arg"]

# List of command line arguments for `cargo`.
#
# These cannot be a subcommand, they may only be options.
cargo-args = ["-Z", "build-std"]
